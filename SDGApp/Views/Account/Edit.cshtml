@model SDGApp.ViewModel.UserViewModel
@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_LayoutForm.cshtml";
    SDGApp.Models.BaseModel BM = new SDGApp.Models.BaseModel();
    var UserTypeID = Model.UserTypeID;
    var skincolour = Model.SkinType;

    var imageSrc = "";
    if (!String.IsNullOrEmpty(Model.Picture))
    {
        imageSrc = Url.Content("~/Content/images/" + Model.Picture);
    }
}
<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
<script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>

@{Html.RenderPartial("_Breadcrumbs"); }



<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">

        <section class="panel ">
            <header class="panel-heading">
                <h2> Edit/Modify user </h2>
                <span class="tools pull-right none">
                    <a href="javascript:;" class="fa fa-chevron-down"></a>
                    <a href="javascript:;" class="fa fa-cog"></a>
                    <a href="javascript:;" class="fa fa-times"></a>
                </span>
            </header>

            <div class="panel-body form-generalIn">

                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12">

                        @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(m => m.UserID)
                            @Html.HiddenFor(m => m.UserName)

                            <div class="position-center profile-settings generalIn-formz ">

                                <div class="row">

                                    <div class="col-lg-6 col-md-6 col-sm-12">

                                        <div class="prf-contacts sttng">
                                            <h2>Personal Information</h2>
                                        </div>

                                        <div>
                                            <div class="form-group">
                                                <label class="control-label">First Name</label>
                                                <div class="">
                                                    @Html.TextBoxFor(m => m.FirstName, new { @placeholder = "First Name", @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.FirstName)
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class=" control-label">Last Name</label>
                                                <div class="">
                                                    @Html.TextBoxFor(m => m.LastName, new { @placeholder = "Last Name", @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.LastName)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class=" control-label">User Name</label>
                                                <div class="">
                                                    @Html.TextBoxFor(m => m.UserName, new { @placeholder = "User Name", @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.LastName)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class=" control-label">Email</label>
                                                <div class="">
                                                    @Html.TextBoxFor(m => m.Email, new { @placeholder = "Email", @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.Email)
                                                </div>
                                            </div>
                                            @*<div class="form-group">
                                                <label class=" control-label">Country</label>
                                                <div class="">
                                                    @Html.DropDownListFor(m => m.CountryID, Model.CountryNameList, "--Select Country--", new { @onchange = "CountryChange(this.value);", @class = "form-control" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class=" control-label">State / Province</label>
                                                <div class="">
                                                    @Html.DropDownListFor(m => m.State, Model.StateNameList, "--Select State--", new { @onchange = "StateChange(this.value);", @class = "form-control" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class=" control-label">City</label>
                                                <div class="">
                                                 
                                                    @Html.TextBoxFor(m => m.CityName, new { @placeholder = "City", @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.CityName)
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class=" control-label">Zip / Postal Code</label>
                                                <div class="">
                                                    @Html.TextBoxFor(m => m.Zip, new { @placeholder = "Zip / Postal Code", @class = "form-control numeric" })
                                                    @Html.ValidationMessageFor(m => m.Zip)
                                                </div>
                                            </div>*@

                                            <div class="form-group">
                                                <label class=" control-label">Organisation</label>
                                                <div class="">
                                                    @Html.DropDownListFor(model => model.CompanyID, Model.UserCompanyList, "--Select Company--", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.CompanyID)
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class=" control-label">User Role</label>
                                                <div class="">
                                                    @Html.DropDownListFor(m => m.UserRoleID, Model.UserRoleList, "--Select Role--", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.UserRole)
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class=" control-label">User Type</label>
                                                <div class="">
                                                    @Html.DropDownListFor(m => m.UserTypeID, Model.UserTypeList, "--Select User Type--", new { @onchange = "UserTypeChange(this.value);", @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class=" control-label">Gender</label>
                                                <div class="">
                                                    @Html.DropDownListFor(m => m.Gender, Model.GenderNameList, "--Select Gender--", new { @class = "form-control" })
                                                </div>
                                            </div>
                                        </div>

                                        <hr />

                                    </div>

                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <div>
                                            <div class="form-group">
                                                <label class=" control-label">Picture</label>
                                                <div class="">
                                                    <div class="fileupload fileupload-new" data-provides="fileupload">
                                                        <div class="fileupload-new thumbnail" style="width: 200px; height: 150px;">
                                                            @if (!String.IsNullOrEmpty(imageSrc))
                                                            {
                                                                <img src="@imageSrc" alt="" />
                                                            }
                                                            else
                                                            {
                                                                <img src="http://www.placehold.it/200x150/EFEFEF/AAAAAA&amp;text=no+image" alt="" />
                                                            }

                                                        </div>
                                                        <div class="fileupload-preview fileupload-exists thumbnail" style="max-width: 200px; max-height: 150px; line-height: 20px;">
                                                            @if (!String.IsNullOrEmpty(imageSrc))
                                                            {
                                                                <img src="@imageSrc" alt="" />
                                                            }
                                                        </div>
                                                        <div>
                                                            <span class="btn btn-white btn-file">
                                                                <span class="fileupload-new"><i class="fa fa-paper-clip"></i> Select image</span>
                                                                <span class="fileupload-exists"><i class="fa fa-undo"></i> Change</span>
                                                                <input id="file" name="file" type="file" />
                                                            </span>
                                                            <a href="javascript:void(0);" class="btn btn-danger fileupload-exists" data-dismiss="fileupload"><i class="fa fa-trash"></i> Remove</a>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>

                                        </div>

                                        @*Attribute Rule Edit*@
                                        <div class="form-group">
                                            <div class="">
                                                <a id="btnAddAttribute" class="btn btn-success" href="javascript:void(0);">Add New Attribute</a>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="">
                                                <div id="dvAttributes">
                                                    @try
                                                    {
                                                        if (Model.txtAttrLabel != null && Model.txtAttrLabel.Length > 0)
                                                        {
                                                            for (int i = 0; i < Model.txtAttrLabel.Length; i++)
                                                            {
                                                                <div id="dvAttribute_@i" class="form-group">
                                                                    <div class="col-lg-5">
                                                                        <select id="txtAttrLabel_@i" name="txtAttrLabel" class="form-control" onchange="EditAttributeRuleData(this.value, @i);">
                                                                            @foreach (var it in Model.DDLAttributeLabel)
                                                                            {
                                                                                <option value="@it.Value">
                                                                                    @it.Text
                                                                                </option>
                                                                            }

                                                                        </select>
                                                                        @*<input id="txtAttrLabel_@i" name="txtAttrLabel" type="text" placeholder="Input Label" class="form-control" value="@Model.txtAttrLabel[i]"/>*@
                                                                    </div>
                                                                    <div class="col-lg-5" id="dvtxtAttrValue_@i">
                                                                        @if (Model.AttributeRuleTypeID[i] == 1)
                                                                        {
                                                                            string[] splitdata = Model.AttributeRuleValue[i].Split(',');
                                                                            <select id="txtAttrValue_@i" name="txtAttrValue" class="form-control">
                                                                                @for (int j = 0; j < splitdata.Length; j++)
                                                                                {
                                                                                    <option value="@splitdata[j]">
                                                                                        @splitdata[j]
                                                                                    </option>
                                                                                }
                                                                            </select>
                                                                        }
                                                                        else if (Model.AttributeRuleTypeID[i] == 2)
                                                                        {
                                                                            string[] splitdatarange = Model.AttributeRuleValue[i].Split(',');
                                                                            <input name="txtAttrValue" type="range" min="@splitdatarange[0]" max="@splitdatarange[1]" value="@Model.txtAttrValue[i]" class="slider" id="txtAttrValue_@i" oninput="putvalue(this.value, @i);">
                                                                            <h5>Value - <strong id="rangevalue_@i">@Model.txtAttrValue[i]</strong></h5>
                                                                        }
                                                                        else if (Model.AttributeRuleTypeID[i] == 3)
                                                                        {
                                                                            <input id="txtAttrValue_@i" name="txtAttrValue" type="text" placeholder="Input Value" class="form-control" value="@Model.txtAttrValue[i]" />
                                                                        }
                                                                        else if (Model.AttributeRuleTypeID[i] == 4)
                                                                        {
                                                                            <input id="txtAttrValue_@i" name="txtAttrValue" type="text" placeholder="Input Value" class="form-control" value="@Model.txtAttrValue[i]" />
                                                                        }
                                                                    </div>
                                                                    <div class=""><a class="btn btn-danger" href="javascript:void(0);" onclick="DeleteAttribute('@i');"><i class="fa fa-minus" aria-hidden="true"></i></a></div>
                                                                </div>
                                                            }
                                                        }
                                                    }
                                                    catch (Exception ex)
                                                    {
                                                    }

                                                </div>
                                            </div>
                                        </div>
                                        @*End Attribute Rule*@


                                        <div id="Device_User">

                                            <div class="prf-contacts sttng">
                                                <h2>Device users</h2>
                                            </div>

                                            <div>
                                                <div class="form-group">
                                                    <label class=" control-label">DOB</label>
                                                    <div class="">
                                                        @Html.TextBoxFor(m => m.DateOfBirth, new { @placeholder = "DOB", @class = "form-control", @autocomplete = "off" })

                                                    </div>
                                                </div>
                                                
                                                <div class="form-group">
                                                    <label class=" control-label">Unit<span class="red"> </span></label>
                                                    <div class="group-unit">
                                                        @foreach (var item in Model.UnitNameList)
                                                        {
                                                            <label class="checkbox-inline">
                                                                @Html.RadioButtonFor(m => m.UnitNameID, item.Value, new { @class = "selectunit", @alt = "" + item.Text + "", @onchange = "fnSelectUnit('" + item.Text + "')" })
                                                                @item.Text
                                                            </label>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class=" control-label">Height</label>
                                                    <div class="">
                                                        @Html.TextBoxFor(m => m.Height, new { @placeholder = "Height in Meter", @class = "form-control decimal", @id = "userheight" })
                                                        @Html.ValidationMessageFor(m => m.Height)
                                                    </div>
                                                    <div class=" ">
                                                        <input id="heightunit" type="text" class="form-control form-control-small" name="unit" value="M" readonly>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class=" control-label">Weight</label>
                                                    <div class="">
                                                        @Html.TextBoxFor(m => m.Weight, new { @placeholder = "Weight in KG", @class = "form-control decimal", @id = "userweight" })
                                                        @Html.ValidationMessageFor(m => m.Weight)
                                                    </div>
                                                    <div class=" ">
                                                        <input id="weightunit" type="text" class="form-control form-control-small" name="unit" value="KG" readonly>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class=" control-label">Geolocation</label>
                                                    <div class="">
                                                        @Html.TextBoxFor(m => m.GeoLocation, new { @placeholder = "Geolocation", @class = "form-control" })
                                                    </div>
                                                </div>

                                                <div class="form-group form-group-skin">
                                                    <label class="control-label">Skin Type</label>
                                                    <div class="editonly ">

                                                        <div id="skintypeothers" class="color-hold">
                                                            <div class="skin-option-radio">
                                                                @if (Model.SkinType == "#8d5524")
                                                                {
                                                                    <label class="radio-inline coption1 active">
                                                                        <input type="radio" name="skincolor" id="inlineRadio1" onchange="SkinTypeChange(this);" value="#8d5524">
                                                                    </label>
                                                                }
                                                                else
                                                                {
                                                                    <label class="radio-inline coption1">
                                                                        <input type="radio" name="skincolor" id="inlineRadio1" onchange="SkinTypeChange(this);" value="#8d5524">
                                                                    </label>
                                                                }
                                                                @if (Model.SkinType == "#c68642")
                                                                {
                                                                    <label class="radio-inline coption2 active">
                                                                        <input type="radio" name="skincolor" id="inlineRadio2" onchange="SkinTypeChange(this);" value="#c68642">
                                                                    </label>
                                                                }
                                                                else
                                                                {
                                                                    <label class="radio-inline coption2">
                                                                        <input type="radio" name="skincolor" id="inlineRadio2" onchange="SkinTypeChange(this);" value="#c68642">
                                                                    </label>
                                                                }
                                                                @if (Model.SkinType == "#e0ac69")
                                                                {
                                                                    <label class="radio-inline coption3 active">
                                                                        <input type="radio" name="skincolor" id="inlineRadio3" onchange="SkinTypeChange(this);" value="#e0ac69">
                                                                    </label>
                                                                }
                                                                else
                                                                {
                                                                    <label class="radio-inline coption3">
                                                                        <input type="radio" name="skincolor" id="inlineRadio3" onchange="SkinTypeChange(this);" value="#e0ac69">
                                                                    </label>
                                                                }
                                                                @if (Model.SkinType == "#f1c27d")
                                                                {
                                                                    <label class="radio-inline coption4 active">
                                                                        <input type="radio" name="skincolor" id="inlineRadio4" onchange="SkinTypeChange(this);" value="#f1c27d">
                                                                    </label>
                                                                }
                                                                else
                                                                {
                                                                    <label class="radio-inline coption4">
                                                                        <input type="radio" name="skincolor" id="inlineRadio4" onchange="SkinTypeChange(this);" value="#f1c27d">
                                                                    </label>
                                                                }
                                                                @if (Model.SkinType == "#ffdbac")
                                                                {
                                                                    <label class="radio-inline coption5 active">
                                                                        <input type="radio" name="skincolor" id="inlineRadio5" onchange="SkinTypeChange(this);" value="#ffdbac">
                                                                    </label>
                                                                }
                                                                else
                                                                {
                                                                    <label class="radio-inline coption5">
                                                                        <input type="radio" name="skincolor" id="inlineRadio5" onchange="SkinTypeChange(this);" value="#ffdbac">
                                                                    </label>
                                                                }
                                                            </div>
                                                        </div>

                                                        <!-- firefox issue start -->
                                                        <div id="skintypefirefox" class="ch-firefox">
                                                            <div class="color-hold ">

                                                                <div class="skin-option-radio">
                                                                    @if (Model.SkinType == "#8d5524")
                                                                    {
                                                                        <label class="radio-inline coption1 active">
                                                                            <input type="radio" name="skincolor" id="inlineRadio1" onchange="SkinTypeChange(this);" value="#8d5524">
                                                                        </label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label class="radio-inline coption1">
                                                                            <input type="radio" name="skincolor" id="inlineRadio1" onchange="SkinTypeChange(this);" value="#8d5524">
                                                                        </label>
                                                                    }
                                                                    @if (Model.SkinType == "#c68642")
                                                                    {
                                                                        <label class="radio-inline coption2 active">
                                                                            <input type="radio" name="skincolor" id="inlineRadio2" onchange="SkinTypeChange(this);" value="#c68642">
                                                                        </label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label class="radio-inline coption2">
                                                                            <input type="radio" name="skincolor" id="inlineRadio2" onchange="SkinTypeChange(this);" value="#c68642">
                                                                        </label>
                                                                    }
                                                                    @if (Model.SkinType == "#e0ac69")
                                                                    {
                                                                        <label class="radio-inline coption3 active">
                                                                            <input type="radio" name="skincolor" id="inlineRadio3" onchange="SkinTypeChange(this);" value="#e0ac69">
                                                                        </label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label class="radio-inline coption3">
                                                                            <input type="radio" name="skincolor" id="inlineRadio3" onchange="SkinTypeChange(this);" value="#e0ac69">
                                                                        </label>
                                                                    }
                                                                    @if (Model.SkinType == "#f1c27d")
                                                                    {
                                                                        <label class="radio-inline coption4 active">
                                                                            <input type="radio" name="skincolor" id="inlineRadio4" onchange="SkinTypeChange(this);" value="#f1c27d">
                                                                        </label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label class="radio-inline coption4">
                                                                            <input type="radio" name="skincolor" id="inlineRadio4" onchange="SkinTypeChange(this);" value="#f1c27d">
                                                                        </label>
                                                                    }
                                                                    @if (Model.SkinType == "#ffdbac")
                                                                    {
                                                                        <label class="radio-inline coption5 active">
                                                                            <input type="radio" name="skincolor" id="inlineRadio5" onchange="SkinTypeChange(this);" value="#ffdbac">
                                                                        </label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <label class="radio-inline coption5">
                                                                            <input type="radio" name="skincolor" id="inlineRadio5" onchange="SkinTypeChange(this);" value="#ffdbac">
                                                                        </label>
                                                                    }
                                                                </div>

                                                            </div>
                                                        </div>
                                                        <!-- end firefox issue -->

                                                    </div>

                                                </div>
                                            </div>

                                        </div>

                                        <div id="Resercher" style="display:none;">

                                            <div class="prf-contacts sttng">
                                                <h2>Resercher</h2>
                                            </div>

                                            <div>

                                                <div class="form-group">
                                                    <label class=" control-label">Institution</label>
                                                    <div class="">
                                                        @Html.TextBoxFor(m => m.Institution, new { @placeholder = "Institution", @class = "form-control" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class=" control-label">Notes</label>
                                                    <div class="">
                                                        @Html.TextAreaFor(m => m.NotesHere, new { @placeholder = "Notes here", @class = "form-control" })
                                                    </div>
                                                </div>

                                            </div>

                                        </div>

                                        <div class="form-group">
                                            <div class="col-lg-12 col-md-12 col-sm-12 no-pad">
                                                <button class="btn btn-primary" type="submit" onclick="return checkDuplicateData();"><i class="fa fa-save"></i>&nbsp;Save</button>
                                                @Html.ActionLink("Cancel", "ManageUser", "Account", new { }, new { @class = "btn btn-danger" })
                                            </div>
                                        </div>

                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12">

                                    </div>
                                </div>

                            </div>

                        }

                    </div>
                </div>

            </div>
        </section>
    </div>
</div>


@section Scripts
{
    <script>
         fnSelectMenuActive('setup', 'manageuser');
         var skincol = $('#skincolour').val();


        $(function () {
            // duplicate email checking
            $('#Email').on('change', function () {
                $.ajax({
                    type: 'POST',
                    data: { Email: $(this).val(), UserID: parseInt('@Model.UserID') },
                    url: '@Url.Action("CheckDuplicateEmail", "Account")', // we are calling json method
                    dataType: 'json',
                    success: function (data) {
                        if (data.Result) {
                            showalertpopup('Email already exists, please try with another one!');
                        }
                    }
                });
            });

            // duplicate username checking
            $('#UserName').on('change', function () {
                $.ajax({
                    type: 'POST',
                    data: { UserName: $(this).val(), UserID: parseInt('@Model.UserID') },
                    url: '@Url.Action("CheckDuplicateUserName", "Account")', // we are calling json method
                    dataType: 'json',
                    success: function (data) {
                        if (data.Result) {
                            showalertpopup('UserName already exists, please try with another one!');
                        }
                    }
                });
            });



            if ($('#UserTypeID').val() == '3') {
                $('#Device_User').show();
                $('#Resercher').hide();
            }
            else {
                $('#Device_User').hide();
                $('#Resercher').show();
            }

        });

        function checkDuplicateData()
        {
            $.ajax({
                type: 'POST',
                data: { Email: $('#Email').val(), UserID: parseInt('@Model.UserID') },
                url: '@Url.Action("CheckDuplicateEmail", "Account")', // we are calling json method
                dataType: 'json',
                success: function (data) {
                    if (data.Result) {
                        showalertpopup('Email already exists, please try with another one!');
                        return false;
                    }
                }
            });
            $.ajax({
                type: 'POST',
                data: { UserName: $('#UserName').val(), UserID: parseInt('@Model.UserID') },
                url: '@Url.Action("CheckDuplicateUserName", "Account")', // we are calling json method
                dataType: 'json',
                success: function (data) {
                    if (data.Result) {
                        showalertpopup('UserName already exists, please try with another one!');
                        return false;
                    }
                }
            });
            return true;
        }

        function UserTypeChange(UserType) {
            if (UserType == 3) {
                $('#Device_User').show();
                $('#Resercher').hide();
            }
            else {
                $('#Device_User').hide();
                $('#Resercher').show();
            }
        }

        function CountryChange(strCountry) {

            $("#State").empty();
            $("#City").empty();
            $("#City").append('<option value="0">--Select City--</option>');
            $.ajax({
                type: 'Get',
                data: { CountryID: $('#CountryID').val() },
                url: '@Url.Action("GetStates", "Account")', // we are calling json method
                dataType: 'json',
                // here we are get value of selected country and passing same value
                //as inputto json method GetStates.
                success: function (states) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $("#State").append('<option value="0">--Select State--</option>');
                    $.each(states, function (i, state) {
                        $("#State").append('<option value="' + state.ID + '">' +
                             state.StateName + '</option>');
                        // here we are adding option for States
                    });

                },
                error: function (ex) {

                    alert('Failed to retrieve states.' + ex);
                }

            });

        }

        function StateChange(strState) {
            $("#City").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCity","Account")',
                dataType: 'json',
                data: { StateId: $('#State').val() },
                success: function (citys) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    //$("#City").append('<option value="0">--Select City--</option>');
                    $.each(citys, function (i, city) {
                        $("#City").append('<option value="'
                              + city.ID + '">'
                              + city.CityName + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
        }


         @try
        {
             if (Model != null && Model.UserID > 0)
             {
                 for (int m = 0; m < Model.AttributeRuleTypeID.Length; m++)
                 {
                     <text>$("#txtAttrLabel_@m option[value='@Model.AttributeRuleLabelID[m]']").attr("selected", "selected");</text>
                     if (Model.AttributeRuleTypeID[m] == 1)
                 {
                      <text>$("#txtAttrValue_@m option[value='@Model.txtAttrValue[m]']").attr("selected", "selected");</text>
                 }
         }
        }
        }
    catch (Exception ex)
        {
        }

    var index = 1;

    @if (Model != null && Model.UserID > 0)
        {
            if (Model.txtAttrLabel != null && Model.txtAttrLabel.Length > 0)
            {
                <text>index = parseInt('@Model.txtAttrLabel.Length');</text>
            }
        }

        $(function () {
            $('#btnAddAttribute').on('click', function () {
                //AddAttribute();
                AddAttributeDDL();
            });





        });

        function AddAttributeDDL() {

            var selectddlOptions = '<option value="0">--Select Attribute--</option>';
            $.ajax({
                type: 'Get',
                data: { TypeID: 6 },
                url: '@Url.Action("GetAttributeLabelforDDlByTypeID", "AttributeRule")', // we are calling json method
                dataType: 'json',
                success: function (Data) {
                    $.each(Data, function (i, result) {
                        selectddlOptions += '<option value="' + result.Value + '">' +
                                            result.Text + '</option>';
                    });


                    var html = '<div id="dvAttribute_' + index + '" class="form-group form-topMost-border">' +
                          '<div class="col-lg-5"><select id="txtAttrLabel_' + index + '" name="txtAttrLabel" class = "form-control" onchange="EditAttributeRuleData(this.value,' + index + ');">' + selectddlOptions + '</select></div>' +
                          '<div class="col-lg-5" id="dvtxtAttrValue_' + index + '" class = "form-control"></div>' +
                          '<div class="col-lg-2"><a class="btn btn-danger" href="javascript:void(0);" onclick="DeleteAttribute(' + index + ');"><i class="fa fa-minus" aria-hidden="true"></i></a></div>' +
                     '</div>';

                    $('#dvAttributes').append(html);
                    index++;
                },
                error: function (ex) {

                    alert('Failed to retrieve attributes.' + ex);
                }

            });

        }

        //FETCH ATTRIBUTE RULE DATA BY LABEL ID EDIT

        function EditAttributeRuleData(labelId, currentid) {
          
            var selectOptions = '';
            $.ajax({
                type: 'Get',
                data: { "AttrLabelId": labelId },
                url: '@Url.Action("GetAttributeTypeAndValue", "AttributeRule")',
                dataType: 'json',
                success: function (Data) {

                    switch (Data.AttributeRuleTypeID) {
                        case 1://GENERATE DDL
                            var splitdata = Data.AttributeRuleValue.split(',');
                            selectOptions = '<select id="txtAttrValue_' + currentid + '" name="txtAttrValue" class = "form-control" >';
                            for (var i = 0; i < splitdata.length; i++) {
                                selectOptions += '<option value="' + splitdata[i] + '">' +
                                                splitdata[i] + '</option>';
                            }
                            selectOptions += '</select>';
                            $('#dvtxtAttrValue_' + currentid).empty();
                            break;
                        case 2://GENERATE NUMERIC SLIDER
                            var splitdatarange = Data.AttributeRuleValue.split(',');

                            selectOptions = '<div id="slidecontainer_' + currentid + '"><input name="txtAttrValue" type="range" min="' + splitdatarange[0] + '" max="' + splitdatarange[1] + '" value="' + splitdatarange[0] + '" class="slider" id="txtAttrValue_' + currentid + '" oninput="putvalue(this.value, ' + currentid + ');">' +
                                           '<h5>Value - <strong id="rangevalue_' + currentid + '"></strong></h5></div>';

                            $('#dvtxtAttrValue_' + currentid).empty();

                            break;
                        case 3://GENERATE EMAIL
                            selectOptions = '<input id="txtAttrValue_' + currentid + '" name="txtAttrValue" type="text" value="' + Data.AttributeRuleValue + '" class = "form-control" onchange="return validateEmail(this.value);"/>';
                            $('#dvtxtAttrValue_' + currentid).empty();
                            break;
                        case 4:// GENERATE PHONE
                            selectOptions = '<input id="txtAttrValue_' + currentid + '" name="txtAttrValue" type="text" value="' + Data.AttributeRuleValue + '" maxlength="10"  class = "form-control" onkeypress="return Checkphonenolimit(event)" />';
                            $('#dvtxtAttrValue_' + currentid).empty();
                            break;
                    }
                    $('#dvtxtAttrValue_' + currentid).append(selectOptions);

                },
                error: function (ex) {
                    alert('Failed to retrieve records.' + ex);
                }

            });
        }


        //FETCH ATTRIBUTE RULE DATA BY LABEL ID
        function AddAttributeRuleData(labelId) {

            var selectOptions = '';
            var indexval = index - 1;
            $.ajax({
                type: 'Get',
                data: { "AttrLabelId": labelId },
                url: '@Url.Action("GetAttributeTypeAndValue", "AttributeRule")',
                dataType: 'json',
                success: function (Data) {
                    alert
                    switch (Data.AttributeRuleTypeID) {
                        case 1://GENERATE DDL
                            var splitdata = Data.AttributeRuleValue.split(',');
                            selectOptions = '<select id="txtAttrValue_' + indexval + '" name="txtAttrValue" class = "form-control" >';
                            for (var i = 0; i < splitdata.length; i++) {
                                selectOptions += '<option value="' + splitdata[i] + '">' +
                                                splitdata[i] + '</option>';
                            }
                            selectOptions += '</select>';
                            $('#dvtxtAttrValue_' + indexval).empty();
                            break;
                        case 2://GENERATE NUMERIC SLIDER
                            var splitdatarange = Data.AttributeRuleValue.split(',');

                            selectOptions = '<div id="slidecontainer_' + indexval + '"><input name="txtAttrValue" type="range" min="' + splitdatarange[0] + '" max="' + splitdatarange[1] + '" value="' + splitdatarange[0] + '" class="slider" id="txtAttrValue_' + indexval + '" oninput="putvalue(this.value,' + indexval + ');">' +
                                           '<h5>Value - <strong id="rangevalue_' + indexval + '"></strong></h5></div>';

                            $('#dvtxtAttrValue_' + indexval).empty();
                            break;
                        case 3://GENERATE EMAIL
                            selectOptions = '<input id="txtAttrValue_' + indexval + '" name="txtAttrValue" type="text" value="' + Data.AttributeRuleValue + '" class = "form-control" onchange="return validateEmail(this.value);"/>';
                            $('#dvtxtAttrValue_' + indexval).empty();
                            break;
                        case 4:// GENERATE PHONE
                            selectOptions = '<input id="txtAttrValue_' + indexval + '" name="txtAttrValue" type="text" value="' + Data.AttributeRuleValue + '" maxlength="10"  class = "form-control" onkeypress="return Checkphonenolimit(event)" />';
                            $('#dvtxtAttrValue_' + indexval).empty();
                            break;
                    }
                    $('#dvtxtAttrValue_' + indexval).append(selectOptions);

                },
                error: function (ex) {
                    alert('Failed to retrieve records.' + ex);
                }

            });
        }


        function DeleteAttribute(id) {
            $('#dvAttribute_' + id).remove();
        }


    </script>
}

<script>
    fnSelectUnit(null);

    $(document).ready(function () {
        $("#DateOfBirth").datepicker({
            // dateFormat: "MM-dd-yyyy",
            autoclose: true
        });


        var ua = navigator.userAgent.toLowerCase();

        if (ua.indexOf('firefox') > -1) {
            $("#skintypeothers").hide();
            $("#skintypefirefox").show();

        } else {
            $("#skintypefirefox").hide();
            $("#skintypeothers").show();
        }
    });


    function fnSelectUnit(event) {

        if (event != null) {
            //var selectedtext = $(event).find("option:selected").text();
            var userheight = parseFloat($("#userheight").val());
            var userweight = parseFloat($("#userweight").val());

            var selectedtext = event;
            if (selectedtext == 'Metric') {
                var convervalheight = (userheight * 0.0254).toFixed(2);
                var convervalweight = (userweight * 0.453592).toFixed(2);
                $("#userheight").val(convervalheight);
                $("#userweight").val(convervalweight);
                $("#heightunit").val("M");
                $("#weightunit").val("KG");
            } else {

                //else "Imperial"
                var convervalheight = (userheight * 39.3701).toFixed(2);
                var convervalweight = (userweight * 2.20462).toFixed(2);
                $("#userheight").val(convervalheight);
                $("#userweight").val(convervalweight);

                $("#heightunit").val("Inch");
                $("#weightunit").val("Pound");
            }
        } else {

            var selectedtext = $(".selectunit:checked").attr('alt');

            if (selectedtext == 'Metric') {

                $("#heightunit").val("M");
                $("#weightunit").val("KG");
            } else {

                //else "Imperial"
                $("#heightunit").val("Inch");
                $("#weightunit").val("Pound");
            }
        }

    }

    function SkinTypeChange(event) {

        $(".radio-inline").removeClass('active');

        $(event).parent().addClass('active');

    }
</script>

