@{
    int UserID = 0;

    if (ViewData["UserID"] != null && ViewData["UserID"] != "" && Convert.ToInt32(ViewData["UserID"]) > 0)
    {
        UserID = Convert.ToInt32(ViewData["UserID"]);
    }
}

<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.min.js"></script>

<div class="sleeptab">
    <section class="panel panel-overview-app ">
        <div class="panel-heading">
            <h2> Detailed history </h2>
            <span class="tools pull-right none">
                <a href="javascript:;" class="fa fa-chevron-down"></a>
            </span>
        </div>

        <div class="panel-body panel-tab-view ">
            <div class="panel-heading tab-bg-dark-navy-blue ">
                <ul id="toggleholder" class="nav nav-tabs">
                    <li class="active">
                        <a id="dayhistory" name="day" data-toggle="tab" onclick="fnGetSleepHistory(this.name)" href="#">Day</a>
                    </li>
                    <li class="">
                        <a id="weekhistory" name="week" data-toggle="tab" onclick="fnGetSleepHistory(this.name)" href="#">Week</a>
                    </li>
                    <li class="">
                        <a id="monthhistory" name="month" data-toggle="tab" onclick="fnGetSleepHistory(this.name)" href="#">Month</a>
                    </li>
                </ul>
            </div>
            <div class="tab-content">

                <div id="dayhistory" class="tab-pane active  ">
                    <form action="#" class="form-horizontal ">
                        <div class="form-group">
                            <label id="lblfordetailsname" class="control-label col-lg-3 col-md-3 col-sm-12 ">History for the day : </label>
                            <div id="datepickerholder" class="col-lg-3 col-md-3 col-sm-12 ">
                                <div id="datepickerdivholder" data-date-viewmode="years" data-date-format="mm-dd-yyyy" data-date="@DateTime.Now.ToString("MM-dd-yyyy")" class="input-append date dpYears">
                                    <input id="datepickerval" type="text" readonly="" value="@DateTime.Now.ToString("MM-dd-yyyy")" size="16" class="form-control">
                                    <span class="input-group-btn add-on">
                                        <button class="btn btn-round btn-primary" type="button"><i class="fa fa-calendar"></i></button>
                                    </span>
                                </div>
                                <span class="help-block none">Select date</span>
                            </div>
                        </div>

                        <div style="display:none;" id="nodatafounddiv">No Sleep details found for chart </div>
                    </form>

                    <section class="table-tab-view">
                        <div class="panel-heading">
                            <h2> Statistics graph </h2>
                            <span class="tools pull-right none">
                                <a href="javascript:;" class="fa fa-chevron-down" aria-hidden="true"></a>
                            </span>
                        </div>
                        <div id="dbtabchart">
                            <div id="allchartshow" class="main-chart chart chartcardiac">
                                <div id="chtAnimatedBarChart" class="bcBar" style="display:none;"></div>
                                <div id="chtSleepChart" style="display:none;">
                                    <div id="legend" class="chart-legend"></div>
                                    <canvas id="cnvSleepChart"></canvas>

                                </div>
                            </div>
                        </div>
                    </section>

                    <section class="table-tab-view">
                        <div class="panel-heading">
                            <h2> Detail information </h2>
                            <span class="tools pull-right none ">
                                <a href="javascript:;" class="fa fa-chevron-down" aria-hidden="true"></a>
                            </span>
                        </div>
                        <table class="table table-striped table-hover table-nobro general-table">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Date</th>
                                    <th class="numeric">Deep Sleep (Hr)</th>
                                    <th class="numeric">Light Sleep (Hr)</th>
                                    <th class="numeric">Stay Up (Hr)</th>
                                </tr>
                            </thead>
                            <tbody id="dtlsinfosleep">
                            </tbody>
                        </table>
                    </section>
                </div>
            </div>
        </div>
    </section>
</div>





<script type="text/javascript">

    var gethistorytype = "day";

    $(document).ready(function () {

        $('.dpYears').datepicker({
            format: 'mm-dd-yyyy',
            autoclose: true

        });

        var FistLoading = true;
        var currentdate = "@DateTime.Now.ToString("MM-dd-yyyy")";

        fnGetSleepHistory("day");

        $('#datepickerdivholder').on("changeDate", function (ev) {

            if (!FistLoading) {

                fnGetSleepHistory(gethistorytype);

            } else {
                FistLoading = false;
            }

        });

    });//end document ready



    function fnGetSleepHistory(type) {

        var date = $("#datepickerval").val();

        if (type != '') {

            gethistorytype = type;
            $("#lblfordetailsname").text("History for the " + gethistorytype + " :");
            ClearChart();
            $("#dtlsinfosleep").html('');

            if (date === '') {
                date = "@DateTime.Now.ToString("MM-dd-yyyy")";
            }

            fnGetSleepHistory(type, date);
        }
    }


    function fnGetSleepHistory(type, date) {

        var UserID =@UserID;

        if (date == null) {
            date="@DateTime.Now.ToString("MM-dd-yyyy")";
        }

        setTimeout(function () {

            $.ajax({
                type: 'POST',
                data: { type: type, currentdate: date, UserID: UserID },
                url: '@Url.Action("GetSleepChartHistory", "CarePeople")', // we are calling json method
                dataType: 'json',
                success: function (results) {

                    if (type == 'day' && results.SleepList != '') {
                        var listsleepdata = results.SleepList[0].SleepData;
                        var xlabels = new Array();
                        var yaxisArrayValues = new Array();

                        $.each(listsleepdata, function (i, item) {
                            xlabels.push(item.startTime);
                            yaxisArrayValues.push(item.sleep_type);
                        });

                        if (xlabels.length > 0 && yaxisArrayValues.length > 0) {
                            $("#nodatafounddiv").hide();
                            LoadSleepDayChart(xlabels, yaxisArrayValues);
                        } else {
                            $("#nodatafounddiv").show();
                        }

                        fnSleepDtlsInfo(results.SleepList);
                    }

                    else if (results.SleepList != '') {

                        $("#nodatafounddiv").hide();
                        var sleeplist = results.SleepList;
                        var DateValues = new Array();
                        var DeepSleepHour = new Array();
                        var LightSleepHour = new Array();
                        var StayUPHour = new Array();

                        $.each(sleeplist, function (i, item) {

                            var dtsleepDate = new Date(parseInt(item.sleepDate.substr(6)));
                            DateValues.push(dtsleepDate.toLocaleString('default', { day: 'numeric' }) + '-' + dtsleepDate.toLocaleString('default', { month: 'short' }));
                            DeepSleepHour.push(item.sleepDeepTime);
                            LightSleepHour.push(item.sleepLightTime);
                            StayUPHour.push(item.sleepStayupTime);
                        });

                        LoadLineGraph(DateValues, DeepSleepHour, LightSleepHour, StayUPHour);
                        fnSleepDtlsInfo(sleeplist);

                    } else {
                        $("#nodatafounddiv").hide();
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve chart.' + ex);
                }
            });

        }, 500);
    }

    function fnSleepDtlsInfo(sleeplist) {

        $("#dtlsinfosleep").html('');
        $.each(sleeplist, function (index, item) {

            //var dtDate = new Date(parseInt(item.sleepDate.substr(6)));

            var strHtml = '';
            strHtml += '<tr>';
            strHtml += '<td></td>';
            strHtml += '<td>' + item.CreateDateTimeStamp + '</td>';
            strHtml += '<td class="numeric">' + item.sleepDeepTime + '</td>';
            strHtml += '<td class="numeric">' + item.sleepLightTime + '</td>';
            strHtml += '<td class="numeric">' + item.sleepStayupTime + '</td>';
            strHtml += '</tr>';

            $("#dtlsinfosleep").append(strHtml);
        });
    }

    function LoadLineGraph(DateValues, DeepSleepHour, LightSleepHour, StayUPHour) {

        $("#chtAnimatedBarChart").css('display', 'block');

        var options = {
            series: [
                {
                    name: "Deep Sleep Hour",
                    data: DeepSleepHour //[120, 140, 120, 140, 125, 120, 120]
                },
                {
                    name: "Light Sleep Hour",
                    data: LightSleepHour //[88, 88, 85, 86, 88, 85, 80]
                },
                {
                    name: "Stay UP Hour",
                    data: StayUPHour //[77, 75, 70, 78, 75, 72, 70]
                }
            ],
            tooltip: {
                enabled: true,
                position: "topLeft",
                fixed: {
                    enabled: true,
                    position: "topLeft",
                    offsetX: 0,
                    offsetY: 0,
                },
            },
            chart: {
                width: '100%',
                height: 350,
                type: 'line',
                shadow: {
                    enabled: true,
                    color: '#000',
                    top: 18,
                    left: 7,
                    blur: 10,
                    opacity: 1
                },
                zoom: {
                    zoomedArea: {
                        fill: {
                            color: '#90CAF9',
                            opacity: 0.4
                        },
                        stroke: {
                            color: '#0D47A1',
                            opacity: 0.4,
                            width: 1
                        }
                    },
                    type: 'x',
                    enabled: true,
                    autoScaleYaxis: true
                },
                toolbar: {
                    show: true,
                    tools: {
                        zoom: true,
                        zoomin: true,
                        zoomout: true,
                        pan: true,
                    },
                    autoSelected: 'zoom'
                }
            },
            colors: ['#77B6EA', '#545454', '#ff0000'],
            dataLabels: {
                enabled: true,
            },
            stroke: {
                curve: 'smooth'
            },
            title: {
                text: 'Sleep History',
                align: 'middle',
                fontWeight: "bold"
            },
            grid: {
                borderColor: '#e7e7e7',
                row: {
                    colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
                    opacity: 0.5
                },
            },
            markers: {
                size: 1
            },
            xaxis: {
                categories: DateValues, // ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],
                title: {
                    text: 'Date'
                }
            },
            yaxis: {
                title: {
                    text: 'Value'
                }
                //,
                //min: 0,
                //max: 24
            },
            legend: {
                position: 'top',
                horizontalAlign: 'left',
                floating: true,
                offsetY: -25,
                offsetX: -5
            }
        };

        var chart = new ApexCharts(document.querySelector("#chtAnimatedBarChart"), options);
        chart.render();

    }

    function ClearChart() {
        $("#allchartshow").html('');
        var strHtml = '';
        strHtml += '<div id="chtAnimatedBarChart" class="bcBar" style="display:none;"></div>';
        strHtml += '<div id="chtSleepChart" style="display:none;">';
        strHtml += '<div id="legend" class="chart-legend"></div>';
        strHtml += '<canvas id="cnvSleepChart"></canvas>';
        strHtml += '</div>';

        $("#allchartshow").append(strHtml);


    }

    function LoadSleepDayChart(xlabels, yaxisArrayValues) {

        $("#chtSleepChart").css('display', 'block');

        var ctx = document.getElementById('cnvSleepChart').getContext('2d');

        //adding custom chart type
        Chart.defaults.multicolorLine = Chart.defaults.line;
        Chart.defaults.global.legend.position = 'top';
        Chart.controllers.multicolorLine = Chart.controllers.line.extend({
            draw: function (ease) {
                var
                    startIndex = 0,
                    meta = this.getMeta(),
                    points = meta.data || [],
                    colors = this.getDataset().colors,
                    area = this.chart.chartArea,
                    originalDatasets = meta.dataset._children
                        .filter(function (data) {
                            return !isNaN(data._view.y);
                        });

                function _setColor(newColor, meta) {
                    meta.dataset._view.borderColor = newColor;
                }

                if (!colors) {
                    Chart.controllers.line.prototype.draw.call(this, ease);
                    return;
                }

                for (var i = 2; i <= colors.length; i++) {
                    if (colors[i - 1] !== colors[i]) {
                        _setColor(colors[i - 1], meta);
                        meta.dataset._children = originalDatasets.slice(startIndex, i);
                        meta.dataset.draw();
                        startIndex = i - 1;
                    }
                }

                meta.dataset._children = originalDatasets.slice(startIndex);
                meta.dataset.draw();
                meta.dataset._children = originalDatasets;

                points.forEach(function (point) {
                    point.draw(area);
                });
            }
        });

        var yaxisArray = yaxisArrayValues;  // [0, 1, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 4, 5];
        var yaxisColorArray = new Array();

        yaxisColorArray.push('');

        var arrayLength = yaxisArray.length;
        for (var i = 0; i < arrayLength; i++) {


            if (yaxisArray[i] == 0) {
                yaxisColorArray.push('yellow');
            }
            else if (yaxisArray[i] == 1) {
                yaxisColorArray.push('red');
            }
            else if (yaxisArray[i] == 2) {
                yaxisColorArray.push('blue');
            }
            else if (yaxisArray[i] == 3) {
                yaxisColorArray.push('green');
            }
            else if (yaxisArray[i] == 4) {
                yaxisColorArray.push('brown');
            }
            else if (yaxisArray[i] == 5) {
                yaxisColorArray.push('pink');
            }
        }

        //console.log(yaxisArray);
        //console.log(yaxisColorArray);


        var chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'multicolorLine',

            // The data for our dataset
            data: {
                labels: xlabels, //["23:00", "01:12", "01:22", "02:11", "02:26", "02:39", "02:56", "03:21", "03:52", "04:03", "04:24", "05:14", "05:41", "05:52", "06:18", "07:05", "07:43", "08:00"],
                datasets: [{
                    label: "Sleep Data",
                    borderColor: 'rgb(255, 99, 132)',
                    fill: false,
                    data: yaxisArrayValues,
                    //first color is not important
                    colors: yaxisColorArray  // ['', 'yellow', 'red', 'blue', 'green', 'pink']
                }]
            },

            // Configuration options go here
            options: {
                legend: {
                    position: 'top',
                    display: false
                },
                title: { display: true, text: 'Sleep Data History' },
                //legend: false,
                legendCallback: function (chart) {
                    var text = [];
                    text.push('<div id="dvlabelAsRange" class="labelAsRange">');
                    text.push('<button class="btn btn-warning    btn-xs"></button> Stay up');
                    text.push('<button class="btn btn-danger     btn-xs"></button> Start Sleeping');
                    text.push('<button class="btn btn-primary    btn-xs"></button> Light sleep');
                    text.push('<button class="btn btn-success    btn-xs"></button> Deep sleep');
                    text.push('<button class="btn btn-info-brown btn-xs"></button> Sleep Interruption');
                    text.push('<button class="btn btn-info-pink  btn-xs"></button> Sleep Complete');

                    //for (var i = 0; i < chart.data.datasets.length; i++) {
                    //    text.push('<li><span style="background-color:red"></span>Stay Up');
                    //    text.push('</li>');
                    //}
                    //text.push('</ul>');

                    text.push('</div>');
                    return text.join('');
                },
                scales: {
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Value'
                        },
                        ticks: {
                            display: true,
                            beginAtZero: true,
                            maxTicksLimit: 5,
                        },
                        gridLines: {
                            display: false
                        }
                    }],
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Time'
                        },
                        gridLines: {
                            display: false
                        },
                        ticks: {
                            display: true
                        }
                    }]
                }
            }
        });

        legend.innerHTML = chart.generateLegend();
    }

</script>
